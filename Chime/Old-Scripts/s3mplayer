#!/usr/bin/env  bash



VERSION='$Id: s3mplayer,v 1.1 2014/05/27 02:32:34 dallas Exp dallas $'  ;
USAGE="${0##*/}  [ -h | -v ]  [-d]  file1  <file2>  <file3> ...."  ;

#  renice   +86   ${$}  ;

source ~/bin/security.pack  ;



# Help subsystem #######################################

function help_message ()
{
  cat <<HELP_MESSAGE  ;

  ${USAGE}

  Wrapper script for vlc and mplayer,
    vlc dumps the audio of files such as .s3m, .mod and .it (and maybe a lot of other formats)
    into a FIFO, mplayer then plays the FIFO.
    When finished the script kills vlc and deletes the FIFO.

  -h                Help
  -v                Version
  -d                Debug

HELP_MESSAGE

  exit  ;
} ;

function  help_check  ()
{

[ -f "${1}" ]  &&  return  ;
#             - continue, return to execution if $1 is a file


case  ${1}  in

[-/][hH?]* | --[hH]* )
  help_message  ;
  ;;

[-/][vV]* | --[vV]* )
  echo ${VERSION#\$Id\: }  ;
  exit  ;
  ;;

[-/][dD]* | --[dD]* )
  SCRIPTDEBUG='1'  ;
  shift  1  ;
  ;;


*@* )
  :  ;
  ;;

* )
  : help_message
  ;;

esac  ;

}  

help_check   "${1}"  ;


##  Process  Parameters  #######################################3


while getopts ':ip:'  SWITCHES
do
  # leading  ':' or OPTERR=0 turns off weird error message
  #  for invalid options

#       TODO:   '--'  end of switches

  case  "${SWITCHES}"  in
  \? ) echo ${USAGE} ; 
      exit    ;
      ;;
#    p ) MPARMS="${OPTARG}"  ;
#        MPARMS="${MPARMS#=}"  ;
#        #  echo "case: ${OPTARG}"  ;
#        ;;
  * )   :  ;
      ;;
  esac
done

shift  $(( ${OPTIND}  -  1 ))
#  --  a piece of boilerplate to sweep options out of the way
#      typically leaving file names


##  Globals, Aliases, Functions  etc. #############################

function  d2x  ()
{
  RESULT=$( bc <<< "ibase=10;obase=16;${1}"    \
      |  tr '[:upper:]'  '[:lower:]'   )  ; 
}

function  right  ()
{
  RESULT="${1}"  ;
  LENGTH="${2}"  ;
  PAD="${3:-' '}"  ;
  while  (( ${#RESULT} < LENGTH ))
  do
    RESULT="${PAD}${RESULT}"  ;
  done  ;
}


#  shopt -s expand_aliases   ;

#  real, old:
#  UA='Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)'
#  current, real:
#  UA='Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6'
#  unreal:
#  UA='Mozilla/9.0 (Windows NT 9.1; WOW64) AppleWebKit/936.6 (KHTML, like Gecko) Chrome/21.0.1092.0 Safari/936.6'




#  TAG="${1:-cddata}"  ;
TAG="${1:?'You need a file.'}"







function  wrapup  ()
  {
  kill  -HUP   %1  ;

  rm  -f  "${YOURFIFO}"  ;
  }



trap  wrapup   EXIT  ;

#  vlc -A file --novideo  -I cli   --audiofile-format float32 --audiofile-wav   --audiofile-file test.wav     paniq_-_insane_97.it   vlc://quit


YOURFIFO="/tmp/${RANDOM}.s3m.fifo"  ;
while    [ -e "${YOURFIFO}" ]
do
  YOURFIFO="/tmp/${RANDOM}.s3m.fifo"  ;
done  ;


mkfifo "${YOURFIFO}"  ;

##  MAIN BODY  #################################################


#  vlc -A file --novideo  -I cli   --audiofile-format float32 --audiofile-wav   --audiofile-file -     "${@}"   vlc://quit   |  mplayer -profile listen     -

#  vlc -A file --novideo  -I cli   --audiofile-format float32 --audiofile-wav   --audiofile-file s3m.fifo     "${@}"   vlc://quit     &

#  ( sleep 1  ;  vlc -A file --novideo  -I dummy   --audiofile-format float32 --audiofile-wav   \

( vlc -A file --novideo  -I dummy   --audiofile-format float32 --audiofile-wav   \
         --audiofile-file "${YOURFIFO}"     "${@}"   \
         vlc://quit     2>/dev/null   1>/dev/null  )  &

#  sleep 5  ;

#  mplayer -profile  listen   -ac pcm   "${YOURFIFO}"  ;
#  mplayer -profile  listen  -ac pcm  -demuxer +audio     "${YOURFIFO}"  ;
#    for chime:

mplayer -ac pcm  -demuxer +audio     "${YOURFIFO}"  ;

#         without '-demuxer +audio'   it would hang, expecting a video  stream,
#               until '>' (next item to play) keyed in by hand.

